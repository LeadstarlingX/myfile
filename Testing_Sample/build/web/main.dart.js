// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const framework = flutter_sdk.src__widgets__framework;
  const app = flutter_sdk.src__material__app;
  const scaffold = flutter_sdk.src__material__scaffold;
  const app_bar = flutter_sdk.src__material__app_bar;
  const basic = flutter_sdk.src__widgets__basic;
  const flex = flutter_sdk.src__rendering__flex;
  const text = flutter_sdk.src__widgets__text;
  const icon = flutter_sdk.src__widgets__icon;
  const icons = flutter_sdk.src__material__icons;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const navigator = flutter_sdk.src__widgets__navigator;
  const text_style = flutter_sdk.src__painting__text_style;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const binding = flutter_sdk.src__widgets__binding;
  const container = flutter_sdk.src__widgets__container;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const colors = flutter_sdk.src__material__colors;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const floating_action_button = flutter_sdk.src__material__floating_action_button;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var tile = Object.create(dart.library);
  var favouritespage = Object.create(dart.library);
  var tilebutton = Object.create(dart.library);
  var $toString = dartx.toString;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    BuildContextToHomePage: () => (T.BuildContextToHomePage = dart.constFn(dart.fnType(main.HomePage, [framework.BuildContext])))(),
    BuildContextToFavouritesPage: () => (T.BuildContextToFavouritesPage = dart.constFn(dart.fnType(favouritespage.FavouritesPage, [framework.BuildContext])))(),
    BuildContextToWidget: () => (T.BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))(),
    IdentityMapOfString$BuildContextToWidget: () => (T.IdentityMapOfString$BuildContextToWidget = dart.constFn(_js_helper.IdentityMap$(core.String, T.BuildContextToWidget())))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 5,
        [EdgeInsets_right]: 5,
        [EdgeInsets_top]: 5,
        [EdgeInsets_left]: 5
      });
    }
  }, false);
  var C = Array(2).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "file:///zapp/project/lib/tile.dart",
    "file:///zapp/project/lib/favouritespage.dart",
    "file:///zapp/project/lib/tilebutton.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  main.MyApp = class MyApp extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.MyApp.new({key: key});
    }
    createState() {
      return new main._MyAppState.new();
    }
  };
  (main.MyApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.MyApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    createState: dart.fnType(framework.State$(main.MyApp), [])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  main._MyAppState = class _MyAppState extends framework.State$(main.MyApp) {
    build(context) {
      return new app.MaterialApp.new({debugShowCheckedModeBanner: false, initialRoute: "/", routes: new (T.IdentityMapOfString$BuildContextToWidget()).from(["/", dart.fn(context => new main.HomePage.new(), T.BuildContextToHomePage()), "/favourites", dart.fn(context => new favouritespage.FavouritesPage.new(), T.BuildContextToFavouritesPage())])});
    }
    static ['_#new#tearOff']() {
      return new main._MyAppState.new();
    }
  };
  (main._MyAppState.new = function() {
    main._MyAppState.__proto__.new.call(this);
    ;
  }).prototype = main._MyAppState.prototype;
  dart.addTypeTests(main._MyAppState);
  dart.addTypeCaches(main._MyAppState);
  dart.setMethodSignature(main._MyAppState, () => ({
    __proto__: dart.getMethods(main._MyAppState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main._MyAppState, I[0]);
  main.HomePage = class HomePage extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.HomePage.new({key: key});
    }
    createState() {
      return new main._HomePageState.new();
    }
  };
  (main.HomePage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.HomePage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.HomePage.prototype;
  dart.addTypeTests(main.HomePage);
  dart.addTypeCaches(main.HomePage);
  dart.setMethodSignature(main.HomePage, () => ({
    __proto__: dart.getMethods(main.HomePage.__proto__),
    createState: dart.fnType(framework.State$(main.HomePage), [])
  }));
  dart.setLibraryUri(main.HomePage, I[0]);
  var _tilevertspacer = dart.privateName(main, "_tilevertspacer");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  main._HomePageState = class _HomePageState extends framework.State$(main.HomePage) {
    build(context) {
      return new app.MaterialApp.new({debugShowCheckedModeBanner: false, home: new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new basic.Row.new({mainAxisSize: flex.MainAxisSize.max, mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new basic.Row.new({children: T.JSArrayOfWidget().of([new text.Text.new("Testing Sample")])}), new basic.Row.new({mainAxisSize: flex.MainAxisSize.max, children: T.JSArrayOfWidget().of([new icon.Icon.new(icons.Icons.monitor_heart), new basic.SizedBox.new({width: 5}), new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                        navigator.Navigator.pushNamed(T.ObjectN(), context, "/favourites");
                      }, T.VoidTovoid()), child: new text.Text.new("Favourites", {style: new text_style.TextStyle.new({fontSize: 10})})})])})])})}), body: new basic.Padding.new({padding: C[1] || CT.C1, child: new scroll_view.ListView.new({children: T.JSArrayOfWidget().of([new tile.Tile.new({name: "Item 1"}), new basic.SizedBox.new({height: this[_tilevertspacer]}), new tile.Tile.new({name: "Item 2"}), new basic.SizedBox.new({height: this[_tilevertspacer]}), new tile.Tile.new({name: "Item 3"}), new basic.SizedBox.new({height: this[_tilevertspacer]}), new tile.Tile.new({name: "Item 4"}), new basic.SizedBox.new({height: this[_tilevertspacer]}), new tile.Tile.new({name: "Item 5"}), new basic.SizedBox.new({height: this[_tilevertspacer]}), new tile.Tile.new({name: "Item 6"}), new basic.SizedBox.new({height: this[_tilevertspacer]}), new tile.Tile.new({name: "Item 7"}), new basic.SizedBox.new({height: this[_tilevertspacer]}), new tile.Tile.new({name: "Item 8"}), new basic.SizedBox.new({height: this[_tilevertspacer]}), new tile.Tile.new({name: "Item 9"}), new basic.SizedBox.new({height: this[_tilevertspacer]}), new tile.Tile.new({name: "Item 10"}), new basic.SizedBox.new({height: this[_tilevertspacer]})])})})})});
    }
    static ['_#new#tearOff']() {
      return new main._HomePageState.new();
    }
  };
  (main._HomePageState.new = function() {
    this[_tilevertspacer] = 20;
    main._HomePageState.__proto__.new.call(this);
    ;
  }).prototype = main._HomePageState.prototype;
  dart.addTypeTests(main._HomePageState);
  dart.addTypeCaches(main._HomePageState);
  dart.setMethodSignature(main._HomePageState, () => ({
    __proto__: dart.getMethods(main._HomePageState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main._HomePageState, I[0]);
  dart.setFieldSignature(main._HomePageState, () => ({
    __proto__: dart.getFields(main._HomePageState.__proto__),
    [_tilevertspacer]: dart.finalFieldType(core.double)
  }));
  main.main = function main$0() {
    binding.runApp(new main.MyApp.new());
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  var name$ = dart.privateName(tile, "Tile.name");
  var _width = dart.privateName(tile, "Tile._width");
  var _height = dart.privateName(tile, "Tile._height");
  var _radius = dart.privateName(tile, "Tile._radius");
  var _tilehorispacer = dart.privateName(tile, "Tile._tilehorispacer");
  var _width$ = dart.privateName(tile, "_width");
  var _height$ = dart.privateName(tile, "_height");
  var _radius$ = dart.privateName(tile, "_radius");
  var _tilehorispacer$ = dart.privateName(tile, "_tilehorispacer");
  tile.Tile = class Tile extends framework.StatelessWidget {
    get name() {
      return this[name$];
    }
    set name(value) {
      super.name = value;
    }
    get [_width$]() {
      return this[_width];
    }
    set [_width$](value) {
      super[_width$] = value;
    }
    get [_height$]() {
      return this[_height];
    }
    set [_height$](value) {
      super[_height$] = value;
    }
    get [_radius$]() {
      return this[_radius];
    }
    set [_radius$](value) {
      super[_radius$] = value;
    }
    get [_tilehorispacer$]() {
      return this[_tilehorispacer];
    }
    set [_tilehorispacer$](value) {
      super[_tilehorispacer$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let name = opts && 'name' in opts ? opts.name : null;
      return new tile.Tile.new({key: key, name: name});
    }
    build(context) {
      return new basic.Row.new({mainAxisSize: flex.MainAxisSize.max, mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T.JSArrayOfWidget().of([new basic.Row.new({children: T.JSArrayOfWidget().of([new container.Container.new({width: this[_width$], height: this[_height$], decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.green, borderRadius: new border_radius.BorderRadius.circular(this[_radius$])})}), new basic.SizedBox.new({width: this[_tilehorispacer$]}), new text.Text.new(this.name)])}), new basic.Row.new({children: T.JSArrayOfWidget().of([new tilebutton.TileButton.new()])})])});
    }
  };
  (tile.Tile.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let name = opts && 'name' in opts ? opts.name : null;
    this[_width] = 50;
    this[_height] = 50;
    this[_radius] = 1.8 * 25;
    this[_tilehorispacer] = 20;
    this[name$] = name;
    tile.Tile.__proto__.new.call(this, {key: key});
    ;
  }).prototype = tile.Tile.prototype;
  dart.addTypeTests(tile.Tile);
  dart.addTypeCaches(tile.Tile);
  dart.setMethodSignature(tile.Tile, () => ({
    __proto__: dart.getMethods(tile.Tile.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(tile.Tile, I[1]);
  dart.setFieldSignature(tile.Tile, () => ({
    __proto__: dart.getFields(tile.Tile.__proto__),
    name: dart.finalFieldType(core.String),
    [_width$]: dart.finalFieldType(core.double),
    [_height$]: dart.finalFieldType(core.double),
    [_radius$]: dart.finalFieldType(core.double),
    [_tilehorispacer$]: dart.finalFieldType(core.double)
  }));
  favouritespage.FavouritesPage = class FavouritesPage extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new favouritespage.FavouritesPage.new({key: key});
    }
    createState() {
      return new favouritespage._FavouritesPageState.new();
    }
  };
  (favouritespage.FavouritesPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    favouritespage.FavouritesPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = favouritespage.FavouritesPage.prototype;
  dart.addTypeTests(favouritespage.FavouritesPage);
  dart.addTypeCaches(favouritespage.FavouritesPage);
  dart.setMethodSignature(favouritespage.FavouritesPage, () => ({
    __proto__: dart.getMethods(favouritespage.FavouritesPage.__proto__),
    createState: dart.fnType(framework.State$(favouritespage.FavouritesPage), [])
  }));
  dart.setLibraryUri(favouritespage.FavouritesPage, I[2]);
  favouritespage._FavouritesPageState = class _FavouritesPageState extends framework.State$(favouritespage.FavouritesPage) {
    build(context) {
      return new app.MaterialApp.new({debugShowCheckedModeBanner: false, home: new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: new text.Text.new("Favourites")}), body: new scroll_view.ListView.new({children: T.JSArrayOfWidget().of([new text.Text.new("Favp")])})})});
    }
    static ['_#new#tearOff']() {
      return new favouritespage._FavouritesPageState.new();
    }
  };
  (favouritespage._FavouritesPageState.new = function() {
    favouritespage._FavouritesPageState.__proto__.new.call(this);
    ;
  }).prototype = favouritespage._FavouritesPageState.prototype;
  dart.addTypeTests(favouritespage._FavouritesPageState);
  dart.addTypeCaches(favouritespage._FavouritesPageState);
  dart.setMethodSignature(favouritespage._FavouritesPageState, () => ({
    __proto__: dart.getMethods(favouritespage._FavouritesPageState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(favouritespage._FavouritesPageState, I[2]);
  tilebutton.TileButton = class TileButton extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new tilebutton.TileButton.new({key: key});
    }
    createState() {
      return new tilebutton._TileButtonState.new();
    }
  };
  (tilebutton.TileButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    tilebutton.TileButton.__proto__.new.call(this, {key: key});
    ;
  }).prototype = tilebutton.TileButton.prototype;
  dart.addTypeTests(tilebutton.TileButton);
  dart.addTypeCaches(tilebutton.TileButton);
  dart.setMethodSignature(tilebutton.TileButton, () => ({
    __proto__: dart.getMethods(tilebutton.TileButton.__proto__),
    createState: dart.fnType(framework.State$(tilebutton.TileButton), [])
  }));
  dart.setLibraryUri(tilebutton.TileButton, I[3]);
  tilebutton._TileButtonState = class _TileButtonState extends framework.State$(tilebutton.TileButton) {
    build(context) {
      return this.toggle === false ? new floating_action_button.FloatingActionButton.new({heroTag: null, mini: true, backgroundColor: colors.Colors.white, onPressed: dart.fn(() => {
          this.setState(dart.fn(() => {
            this.toggle = !this.toggle;
          }, T.VoidTovoid()));
        }, T.VoidTovoid()), child: new icon.Icon.new(icons.Icons.home, {color: colors.Colors.black})}) : new floating_action_button.FloatingActionButton.new({heroTag: null, mini: true, backgroundColor: colors.Colors.white, onPressed: dart.fn(() => {
          this.setState(dart.fn(() => {
            this.toggle = !this.toggle;
          }, T.VoidTovoid()));
        }, T.VoidTovoid()), child: new icon.Icon.new(icons.Icons.home, {color: colors.Colors.red})});
    }
    static ['_#new#tearOff']() {
      return new tilebutton._TileButtonState.new();
    }
  };
  (tilebutton._TileButtonState.new = function() {
    this.toggle = false;
    tilebutton._TileButtonState.__proto__.new.call(this);
    ;
  }).prototype = tilebutton._TileButtonState.prototype;
  dart.addTypeTests(tilebutton._TileButtonState);
  dart.addTypeCaches(tilebutton._TileButtonState);
  dart.setMethodSignature(tilebutton._TileButtonState, () => ({
    __proto__: dart.getMethods(tilebutton._TileButtonState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(tilebutton._TileButtonState, I[3]);
  dart.setFieldSignature(tilebutton._TileButtonState, () => ({
    __proto__: dart.getFields(tilebutton._TileButtonState.__proto__),
    toggle: dart.fieldType(core.bool)
  }));
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "file:///zapp/project/lib/tile.dart": tile,
    "file:///zapp/project/lib/favouritespage.dart": favouritespage,
    "file:///zapp/project/lib/tilebutton.dart": tilebutton
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/tile.dart","/zapp/project/lib/favouritespage.dart","/zapp/project/lib/tilebutton.dart"],"names":[],"mappings":"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    zapp__project__lib__tile: tile,
    zapp__project__lib__favouritespage: favouritespage,
    zapp__project__lib__tilebutton: tilebutton
  };
}));

//# sourceMappingURL=main.js.map
